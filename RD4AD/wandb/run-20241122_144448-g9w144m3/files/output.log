
Training T-S model on chest
chest epochs:   0%|                                                            | 0/100 [00:00<?, ?epoch/s]


































chest epochs:   1%|▌                                                 | 1/100 [01:10<1:57:05, 70.96s/epoch]
















































chest epochs:   2%|█                                                 | 2/100 [02:49<2:22:29, 87.24s/epoch]


































chest epochs:   3%|█▌                                                | 3/100 [03:58<2:07:36, 78.94s/epoch]














































chest epochs:   4%|██                                                | 4/100 [05:32<2:15:49, 84.89s/epoch]
















































chest epochs:   5%|██▌                                               | 5/100 [07:11<2:22:19, 89.89s/epoch]

































chest epochs:   6%|███                                               | 6/100 [08:19<2:09:23, 82.59s/epoch]
















































chest epochs:   7%|███▌                                              | 7/100 [09:57<2:15:43, 87.57s/epoch]































chest epochs:   8%|████                                              | 8/100 [11:00<2:02:18, 79.76s/epoch]












































chest epochs:   9%|████▌                                             | 9/100 [12:31<2:06:18, 83.28s/epoch]

















































chest Training: 100%|███████████████████████████████████████████████████| 450/450 [01:40<00:00,  5.46it/s]





chest epochs:   9%|████▌                                             | 9/100 [14:23<2:25:27, 95.91s/epoch]
Traceback (most recent call last):
  File "/home/zeddo123/anom/RD4AD/easy_train.py", line 122, in <module>
    test(args, c)
  File "/home/zeddo123/anom/RD4AD/easy_train.py", line 88, in test
    auroc_px, auroc_sp, aupro_px, table, roc, pr, _, _, _ = evaluation(encoder, bn, decoder, test_loader, device, _class_=_class_)
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zeddo123/anom/RD4AD/test.py", line 94, in evaluation
    aupro_list.append(compute_pro(gt.squeeze(0).cpu().numpy().astype(int),
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/zeddo123/anom/RD4AD/test.py", line 373, in compute_pro
    assert set(masks.flatten()) == {0, 1}, "set(masks.flatten()) must be {0, 1}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: set(masks.flatten()) must be {0, 1}